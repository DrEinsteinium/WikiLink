buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
		maven {
			name = "yamlbeans"
            url = "http://central.maven.org/maven2/com/esotericsoftware/yamlbeans/"
		}	
    }
    dependencies {
       classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'
    }
}

apply plugin: 'idea'
apply plugin: 'forge'
apply plugin: 'scala'
apply plugin: 'maven'

ext.buildProps = file "build.properties"
 
buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}
 
group = "wikilink"
if (System.getenv("JOB_NAME") != null)
	archivesBaseName = "${System.getenv().JOB_NAME}"
else
	archivesBaseName = "WikiLink"
 
minecraft {
    version = "${rootProject.config.version.minecraft}-${rootProject.config.version.forge}"
    
    replaceIn "Reference.java"
    replace "@MAJOR@", rootProject.config.version.mod.major
    replace "@MINOR@", rootProject.config.version.mod.minor
    if (System.getenv("BUILD_NUMBER") != null) {
		replace "@BUILD@", "${System.getenv("BUILD_NUMBER")}"
	}
	else {
		replace "@BUILD@", "0"
	}
}

subprojects*.apply plugin: 'java'
subprojects*.apply plugin: 'scala'

allprojects {
    version = "${config.version.mod.major}.${config.version.mod.minor}"
    
    if (System.getenv("BUILD_NUMBER") != null)
        version += ".${System.getenv("BUILD_NUMBER")}"
	else
		version += ".0"
        
	repositories {
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "yamlbeans"
            url = "http://repo1.maven.org/maven2/com/esotericsoftware/yamlbeans/"
        }
		ivy {
			name 'FMP'
			artifactPattern "http://files.minecraftforge.net/[module]/[module]-dev-[revision].[ext]"
		}
		ivy {
			artifactPattern "http://www.chickenbones.craftsaddle.org/Files/New_Versions/1.6.4/[module]-dev%20[revision].[ext]"
		}
        mavenCentral()
    }
    
    dependencies {
		compile name: 'CodeChickenLib', version: "${config.version.minecraft}-${config.version.cclib}", ext: 'jar'
		compile name: 'NotEnoughItems', version: "${config.version.nei}", ext: 'jar'
		compile name: 'CodeChickenCore', version: "${config.version.cccore}", ext: 'jar'
		compile name: 'yamlbeans', version: "${config.version.yamlbeans}", ext: 'jar', group: 'com.esotericsoftware.yamlbeans'
	}
    
    jar {
		classifier = project.name
        dependsOn ":copyBuildXml"
        destinationDir = file (rootProject.getRootDir().getPath() + '/output')
    }
}
 
subprojects {
    archivesBaseName = "${System.getenv().JOB_NAME}"    
	sourceSets.main.compileClasspath += rootProject.sourceSets.api.output
    dependencies {
        compile rootProject
    }
    
    rootProject.tasks.reobf {
        reobf(tasks.jar) { spec ->
            spec.classpath = sourceSets.main.compileClasspath
        }
    }
}

processResources {
	from 'build.properties'
}
 
task copyBuildXml(type: Copy) {
    from 'build.properties'
    into 'output'
}
 
task apiZip(type: Zip) {
    classifier = 'api'
    from sourceSets*.allSource
    include 'com/dreinsteinium/wikilink/api/**'
    destinationDir = file 'output'
}
	
artifacts {
    archives apiZip
}

build.dependsOn "apiZip", "copyBuildXml"
